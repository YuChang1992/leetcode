class Solution:
    def maxProduct(self, nums: List[int]) -> int:

        curr_max = nums[0]  #定義一個目前最大值，為第0個位置的值
        curr_min = nums[0]  #定義一個目前最小值，為第0個位置的值
        final_max = nums[0]  #定義一個最終最大值，為第0個位置的值

        for i in range(1, len(nums)):  #從第一個位置的值開始跌代
            next_max = curr_max * nums[i]  #下一個最大值等於目前最大乘值上目前的i位置的值
            next_min = curr_min * nums[i]  #下一個最小值等於目前最小乘值上目前的i位置的值
            curr_max = max(nums[i], next_max, next_min)
            #目前i位置的值、下一個最大值、下一個最小值三個比較，最大的數變成目前最大值
            curr_min = min(nums[i], next_max, next_min)
            #目前i位置的值、下一個最大值、下一個最小值三個比較，最小的數變成目前最小值
            final_max = max(final_max, curr_max)  #最終最大值跟目前最大值比較，較大的變成最終最大值

        return final_max  #回傳最終最大值