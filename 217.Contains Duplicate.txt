#先取第一個數，一個一個向後比對，再取第二個數，一個一個向後比對...直到找到重複的數
class Solution:
    def containsDuplicate(self, nums: List[int]) -> bool:
		for i in range(len(nums)):
			for j in range(i + 1, len(nums)):
				if nums[i] == nums[j]:
					return True
		return False



class Solution:
    def containsDuplicate(self, nums: List[int]) -> bool:

		nums.sort()  #sort排序列表

		for i in range (1, len(nums)):  #迭代出數字
			if nums[i] == nums[i-1]:  #如果當前數字等於當前數字減1，代表有重複的數
				return True  #回傳True
		return False  #回傳False



#使用set集合元素不重複的特性，將重複的數排除，再跟原始的長度做比較，如果比較短代表有重複的數
class Solution:
    def containsDuplicate(self, nums: List[int]) -> bool:

		#set每個元素只能出現一次
		return True if len(set(nums)) != len(nums) else False  #簡化寫法等同下面


		#if len(set(nums)) != len(nums):  #如果轉換成集合後的長度不等於原始長度
			#    return True  #回傳True
			#else:  #等於原始長度
			#    return False  #回傳False

